{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","helpers.js","App.jsx","index.js"],"names":["TodoList","state","inputValue","selectValue","_","prevState","this","props","handleFilterBySearching","handleSelectFilter","todos","handleSelectedUser","className","type","placeholder","value","onChange","event","setState","target","map","todo","classNames","completed","key","id","readOnly","checked","title","onClick","userId","React","Component","CurrentUser","name","email","phone","getData","fetch","then","response","json","result","data","getUser","handleClearUserField","App","allTodos","selectedUserId","currentId","filter","includes","filteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d91cd9e4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    inputValue: '',\n    selectValue: 'all',\n  };\n\n  componentDidUpdate(_, prevState) {\n    const { handleFilterBySearching, handleSelectFilter } = this.props;\n\n    if (prevState.inputValue !== this.state.inputValue) {\n      handleFilterBySearching(this.state.inputValue);\n    }\n\n    if (prevState.selectValue !== this.state.selectValue) {\n      handleSelectFilter(this.state.selectValue);\n    }\n  }\n\n  render() {\n    const { todos, handleSelectedUser } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <input\n          type=\"text\"\n          placeholder=\"title...\"\n          value={this.state.inputValue}\n          onChange={(event) => {\n            this.setState({ inputValue: event.target.value });\n          }}\n        />\n        <select\n          onChange={(event) => {\n            this.setState({ selectValue: event.target.value });\n          }\n          }\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"complited\">Complited</option>\n        </select>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {todos.map(todo => (\n              <li\n                className={\n                  classNames('TodoList__item',\n                    { 'TodoList__item--unchecked': !todo.completed },\n                    { 'TodoList__item--checked': todo.completed })\n                }\n                key={todo.id}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                    checked={todo.completed}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => {\n                    handleSelectedUser(todo.userId);\n                  }}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  handleSelectedUser: PropTypes.func.isRequired,\n  handleSelectFilter: PropTypes.func.isRequired,\n  handleFilterBySearching: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUser } from '../../helpers';\n\nexport class CurrentUser extends React.Component {\nstate = {\n  id: 0,\n  name: '',\n  email: '',\n  phone: '',\n};\n\ncomponentDidMount() {\n  this.getData();\n}\n\ncomponentDidUpdate(_, prevState) {\n  const { userId } = this.props;\n\n  if (prevState.id === userId) {\n    return;\n  }\n\n  this.getData();\n}\n\ngetData() {\n  const { userId } = this.props;\n\n  getUser(userId).then(\n    ({ id, name, email, phone }) => {\n      this.setState(\n        {\n          id,\n          name,\n          email,\n          phone,\n        },\n      );\n    },\n  );\n}\n\nrender() {\n  const { id, name, email, phone } = this.state;\n  const { handleClearUserField } = this.props;\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>\n          Selected user:\n          {id}\n        </span>\n      </h2>\n\n      <h3 className=\"CurrentUser__name\">{name}</h3>\n      <p className=\"CurrentUser__email\">{email}</p>\n      <p className=\"CurrentUser__phone\">{phone}</p>\n      <button\n        type=\"button\"\n        className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n        onClick={() => {\n          handleClearUserField();\n        }\n      }\n      >\n        Clear\n      </button>\n    </div>\n  );\n}\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  handleClearUserField: PropTypes.func.isRequired,\n};\n","export function getTodos() {\n  return (\n    fetch('https://mate-api.herokuapp.com/todos')\n      .then(response => response.json())\n      .then(result => result.data)\n      .then(data => data.filter(todo => todo.title))\n  );\n}\n\nexport function getUser(userId) {\n  return (\n    fetch(`https://mate-api.herokuapp.com/users/${userId}`)\n      .then(response => response.json())\n      .then(result => result.data)\n  );\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './helpers';\n\nclass App extends React.Component {\n  state = {\n    allTodos: [],\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos().then((allTodos) => {\n      this.setState({\n        allTodos,\n        todos: allTodos,\n      });\n    });\n  }\n\n  handleSelectedUser = (currentId) => {\n    this.setState({ selectedUserId: currentId });\n  }\n\n  handleClearUserField = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  handleFilterBySearching = (value) => {\n    const { allTodos } = this.state;\n\n    this.setState({\n      todos: allTodos.filter(todo => todo.title.includes(value)),\n    });\n  }\n\n  handleSelectFilter = (value) => {\n    const { allTodos } = this.state;\n    let filteredTodos = allTodos;\n\n    switch (value) {\n      case 'all':\n        filteredTodos = allTodos;\n        break;\n      case 'active':\n        filteredTodos = allTodos.filter(todo => todo.completed === false);\n        break;\n      case 'complited':\n        filteredTodos = allTodos.filter(todo => todo.completed);\n        break;\n      default:\n        return;\n    }\n\n    this.setState({ todos: filteredTodos });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            handleSelectedUser={this.handleSelectedUser}\n            handleFilterBySearching={this.handleFilterBySearching}\n            handleSelectFilter={this.handleSelectFilter}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                handleClearUserField={this.handleClearUserField}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}